{"version":3,"sources":["reportWebVitals.js","Card.js","CardList.js","SearchBox.js","Scroll.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","filteredRobots","this","filter","robot","toLocaleLowerCase","includes","length","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCQCQ,EAbF,SAACC,GACV,IAAOC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GACpB,OACI,sBAAKC,UAAU,iDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCaLK,EAnBE,SAACP,GACd,IAAOQ,EAAUR,EAAVQ,OACP,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACA,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKdC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCAPI,EARA,SAAClB,GACZ,OACI,qBAAKmB,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAO,SAAnE,SACKtB,EAAMuB,YC6CJC,G,wDAzCX,aAAc,IAAD,8BACT,gBAcJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACd,YAAYa,EAAME,OAAOC,SAdxC,EAAKC,MAAQ,CACTtB,OAAS,GACTK,YAAc,IAJT,E,qDAQb,WAAoB,IAAD,OACfkB,MAAM,8CACDtC,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,UAC1BxC,MAAK,SAAAyC,GAAK,OAAI,EAAKP,SAAS,CAACnB,OAAO0B,S,oBAQ7C,WAAS,IAAD,OACEC,EAAiBC,KAAKN,MAAMtB,OAAO6B,QAAO,SAAAC,GAC5C,OAAOA,EAAMrC,KAAKsC,oBAAoBC,SAAS,EAAKV,MAAMjB,YAAY0B,wBAE1E,OAAgC,IAA7BH,KAAKN,MAAMtB,OAAOiC,OACV,yCAGH,sBAAKrC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcsB,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUjB,OAAQ2B,a,GAhCxBO,IAAMC,YCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B1D,M","file":"static/js/main.cafdb009.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n    const {name, email, id} = props;\r\n    return (\r\n        <div className=' tc bg-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200` }/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from './Card';\r\n\r\nconst CardList = (props) => {\r\n    const {robots} = props;\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user,i) => {\r\n                    return (\r\n                    <Card \r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        name={robots[i].name} \r\n                        email={robots[i].email}\r\n                    />);\r\n                })\r\n            }\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='Search Robots'\r\n            onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border:'1px solid black', height:'700px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from \"react\";\r\nimport CardList from \"./CardList\";\r\nimport SearchBox from './SearchBox';\r\n// import { robots } from \"./Robots\";\r\nimport Scroll from './Scroll';\r\nimport './App.css';\r\n\r\n\r\nclass App extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots : [],\r\n            searchfield : '',\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({robots:users}));\r\n    }\r\n\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield:event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter(robot =>{\r\n            return robot.name.toLocaleLowerCase().includes(this.state.searchfield.toLocaleLowerCase());\r\n        })\r\n        if(this.state.robots.length === 0){\r\n            return <h1>Loading</h1>\r\n        }else{\r\n            return (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}